AWSTemplateFormatVersion: '2010-09-09'

Parameters:

  Name:
    Type: String

  LogLevel:
    Description: Application logging level
    Type: String
    Default: INFO
    AllowedValues:
    - CRITICAL
    - ERROR
    - WARNING
    - INFO
    - DEBUG

  Bucket:
    Type: String

  BundlesTable:
    Type: String

  ObjectsTable:
    Type: String

  EmailQueueName:
    Type: String

  RestoreObjectLambda:
    Type: String

Outputs:

  LambdaName:
    Value: !Ref Lambda

Resources:

  DeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Name}-dlq"
      MessageRetentionPeriod: 1209600

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Name}"
      RetentionInDays: 30

  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref Name
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: lambda.amazonaws.com
          Effect: Allow
      Policies:
      - PolicyName: policy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: !GetAtt LogGroup.Arn
          - Effect: Allow
            Action: sqs:SendMessage
            Resource: !GetAtt DeadLetterQueue.Arn
          - Effect: Allow
            Action: dynamodb:Query
            Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BundlesTable}/index/user"
          - Effect: Allow
            Action: dynamodb:UpdateItem
            Resource:
            - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ObjectsTable}"
            - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BundlesTable}"
          - Effect: Allow
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${Bucket}/*"
          - Effect: Allow
            Action:
            - sqs:GetQueueUrl
            - sqs:SendMessage
            Resource: !Sub "arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${EmailQueueName}"
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${RestoreObjectLambda}"

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref Name
      Code: src/
      DeadLetterConfig:
        TargetArn: !GetAtt DeadLetterQueue.Arn
      Environment:
        Variables:
          CONFIG: !Sub |-
            {
              "log_level": "${LogLevel}",
              "availability": {
                "bucket": "${Bucket}",
                "objects_table": "${ObjectsTable}",
                "bundles_table": "${BundlesTable}",
                "email_queue_name": "${EmailQueueName}",
                "restore_object_lambda": "${RestoreObjectLambda}"
              }
            }
      Handler: main.lambda_handler
      MemorySize: 128
      Role: !GetAtt Role.Arn
      Runtime: python2.7
      Timeout: 60
