# This build script is designed to run in AWS CodeBuild using the aws/codebuild/docker:17.09.0 image
#   ubuntu 14.04.5
#   docker 17.09.0

version: 0.1

environment_variables:
  plaintext:
    BUCKET: "grfn-software"
    PREFIX: "lambda"
    IMAGE_NAME: "door"
    IMAGE_HOST: "406893895021.dkr.ecr.us-east-1.amazonaws.com"
    MATURITY: "PROD"
    SHA1: "c440630"

phases:
  pre_build:
    commands:
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - sed -i "s/\$SHA1/$SHA1/" cloudformation-wrapper.yaml
  build:
    commands:
      - docker pull $IMAGE_HOST/$IMAGE_NAME:$SHA1
      - docker tag $IMAGE_HOST/$IMAGE_NAME:$SHA1 $IMAGE_HOST/$IMAGE_NAME:$MATURITY
      - pip install -r glacier-availability/requirements.txt -t glacier-availability/src/
      - pip install -r glacier-status/requirements.txt -t glacier-status/src/
      - pip install -r object-status/requirements.txt -t object-status/src/
      - pip install -r glacier-upkeep/requirements.txt -t glacier-upkeep/src/
      - pip install -r glacier-restore/requirements.txt -t glacier-restore/src/
      - pip install -r glacier-poll/requirements.txt -t glacier-poll/src/
      - pip install -r glacier-notifications/requirements.txt -t glacier-notifications/src/
      - aws cloudformation package --template-file cloudformation-wrapper.yaml --s3-bucket $BUCKET --s3-prefix $PREFIX --output-template-file cloudformation-final.yaml
  post_build:
    commands:
      - docker push $IMAGE_HOST/$IMAGE_NAME:$MATURITY
artifacts:
  type: zip
  files:
    - cloudformation-final.yaml
