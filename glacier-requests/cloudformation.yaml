AWSTemplateFormatVersion: '2010-09-09'

Parameters:

  Name:
    Type: String

Resources:

  DeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Name}-dlq"
      MessageRetentionPeriod: 1209600

  Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref Name
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Action: sts:AssumeRole
          Principal:
            Service: lambda.amazonaws.com
          Effect: Allow
      ManagedPolicyArns:
      - arn:aws:iam::406893895021:policy/grfn-sqs-subscriber
      - arn:aws:iam::406893895021:policy/grfn-s3-config-read
      - arn:aws:iam::406893895021:policy/grfn-sqs-publisher
      - arn:aws:iam::406893895021:policy/grfn-cloudwatch-logs-write
      - arn:aws:iam::406893895021:policy/grfn-s3-private-write
      - arn:aws:iam::406893895021:policy/grfn-s3-private-read

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref Name
      Runtime: python2.7
      Timeout: 180
      MemorySize: 128
      Role: !GetAtt Role.Arn
      DeadLetterConfig:
        TargetArn: !GetAtt DeadLetterQueue.Arn
      Handler: main.lambda_handler
      Code: src/
      Environment:
        Variables:
          CONFIG_BUCKET: grfn-config
          PROD: glacier-restore-requests.prod.yaml
          TEST: glacier-restore-requests.test.yaml
          LATEST: glacier-restore-requests.test.yaml

  Schedule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Ref Name
      ScheduleExpression: "rate(1 minute)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt Lambda.Arn
          Id: lambda

  EventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Lambda.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt Schedule.Arn
